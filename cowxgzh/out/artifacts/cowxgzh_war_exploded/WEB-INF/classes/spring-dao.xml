<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<!-- 读取classpath下jdbc.properties中关于数据库配置信息 ,替换${xxx}中的值， xxx为变量 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
				<!--要是有多个配置文件，只需在这里继续添加即可 -->
			</list>
		</property>
	</bean>

	<!-- 2.数据库连接池 -->
	<bean id="db" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		<property name="initialSize" value="5" /><!-- 初始化连接，连接池启动时创建的初始化连接数量（默认值为0） -->
		<property name="minIdle" value="5" /><!-- 最小空闲连接，连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；但是不能太大，因为在机器很空闲的时候，也会创建低于minidle个数的连接，类似于jvm参数中的Xmn设置） -->
		<property name="maxIdle" value="40" /><!-- 最大空闲连接，连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制（默认为8个，maxIdle不能设置太小，因为假如在高负载的情况下，连接的打开时间比关闭的时间快，会引起连接池中idle的个数上升超过maxIdle，而造成频繁的连接销毁和创建，类似于jvm参数中的Xmx设置) -->
		<property name="maxActive" value="50" /><!-- 最大活动连接，连接池中可同时连接的最大的连接数（默认值为8） -->
		<property name="maxWait" value="3000" /><!-- 从池中取连接的最大等待时间，单位ms.当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常，如果设置-1表示无限等待（默认为无限） -->
		<property name="validationQuery" value="SELECT 1" /><!-- 验证使用的SQL语句 -->
		<property name="testOnBorrow" value="false" /><!-- 借出连接时不要测试，否则很影响性能。一定要配置，因为它的默认值是true。false表示每次从连接池中取出连接时，不需要执行validationQuery = "SELECT 1" 中的SQL进行测试。若配置为true,对性能有非常大的影响，性能会下降7-10倍。 -->
		<property name="testOnReturn" value="false" /><!-- 表示将连接归还连接池前是否运行validationQuery，true=运行，false=不运行[默认]； -->
		<property name="testWhileIdle" value="true" /><!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除. -->
		<property name="timeBetweenEvictionRunsMillis" value="300000" /><!-- 每60秒运行一次空闲连接回收器，配置timeBetweenEvictionRunsMillis = "60000"后，每60秒运行一次空闲连接回收器（独立线程）。并每次检查3个连接，如果连接空闲时间超过30分钟就销毁。销毁连接后，连接数量就少了，如果小于minIdle数量，就新建连接，维护数量不少于minIdle，过行了新老更替。 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" /><!-- 池中的连接空闲30分钟后被回收 -->
		<property name="numTestsPerEvictionRun" value="5" /><!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="removeAbandoned" value="true" /><!-- 连接泄漏回收参数，当可用连接数少于3个时才执行  -->
		<property name="removeAbandonedTimeout" value="600" /><!-- 连接泄漏回收参数，600秒，泄露的连接可以被删除的超时值 -->
	</bean>

	<bean id="dataSource" class="com.fangzhizun.cowxgzh.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String"></map>
        </property>
        <property name="defaultTargetDataSource" ref="db" />
    </bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper.*/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.fangzhizun.cowxgzh.dao" />
	</bean>

	<!-- 获取spring bean 的工具类 -->
	<bean class="com.fangzhizun.cowxgzh.util.SpringContextUtil" lazy-init="false" />
</beans>
